name: Deploy Control Alt Repeat
on:
  push
env:
  AWS_REGION : eu-west-2
permissions:
  id-token: write
  contents: read
jobs:
  checkout-source-code:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Archive code
        run: tar -czf source-code.tar.gz .
      - name: Upload source code as artifact
        uses: actions/upload-artifact@v3
        with:
          name: source-code
          path: source-code.tar.gz

  go-critic:
    needs: checkout-source-code
    uses: ./.github/workflows/go-critic.yaml
    secrets: inherit
  go-lint:
    needs: checkout-source-code
    uses: ./.github/workflows/go-lint.yaml
    secrets: inherit
  go-vet:
    needs: checkout-source-code
    uses: ./.github/workflows/go-vet.yaml
    secrets: inherit

# name: Install gosec
# name: Run gosec
# name: Run govulncheck
# name: Run goimports

  linting:
    needs:
      - go-critic
      - go-lint
      - go-vet
    steps:
      - name: Linting Complete
        run: echo "Linting completed successfully"

  main-pipeline:
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubOIDC
          aws-region: eu-west-2
          role-session-name: OIDCRoleSessions

      - run: ./scripts/build-lambda-functions.sh

      - run: terraform fmt -check

      - run: terraform init
        working-directory: configs/test
      - run: terraform validate -no-color
        working-directory: configs/test
      - run: terraform apply -auto-approve
        working-directory: configs/test

      - run: terraform init
        working-directory: configs/live
      - run: terraform validate -no-color
        working-directory: configs/live
      - run: terraform apply -auto-approve
        working-directory: configs/live
